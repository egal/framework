version: '3.7'
services:
  postgres:
    image: egalbox/postgres:2.1.0
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: auth,core,notification
    healthcheck:
      test: pg_isready --username=${DB_USERNAME} --dbname=auth && pg_isready --username=${DB_USERNAME}
        --dbname=auth
      interval: 30s
      timeout: 30s
      retries: 3
  rabbitmq:
    image: egalbox/rabbitmq:2.0.1
    restart: unless-stopped
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  web-service:
    image: egalbox/web-service:2.2.2
    restart: unless-stopped
    depends_on:
      - rabbitmq
    environment:
      APP_NAME: ${PROJECT_NAME}
      APP_SERVICE_NAME: web
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      WAIT_HOSTS: rabbitmq:5672
  auth-service:
    build:
      context: ../templates/server/auth-service
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - postgres
    environment:
      APP_DEBUG: "${APP_DEBUG:-true}"
      AUTH_DISABLE: "${AUTH_DISABLE:-false}"
      AUTH_USER_MASTER_TOKEN_TTL: ${AUTH_USER_MASTER_TOKEN_TTL:-600}
      AUTH_USER_SERVICE_TOKEN_TTL: ${AUTH_USER_SERVICE_TOKEN_TTL:-600}
      APP_NAME: ${PROJECT_NAME}
      APP_SERVICE_NAME: auth
      APP_SERVICE_KEY: ${AUTH_SERVICE_KEY}
      APP_SERVICES: "core:${CORE_SERVICE_KEY},notification:${NOTIFICATION_SERVICE_KEY}"
      DB_HOST: postgres
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      WAIT_HOSTS: rabbitmq:5672,postgres:5432
    volumes:
     - ../packages/php:/app/vendor/egal/framework
#      - ../packages/php:/dependencies/php-package
  core-service:
    build:
      context: server/core-service
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - postgres
    environment:
      APP_DEBUG: "${APP_DEBUG:-true}"
      AUTH_DISABLE: "${AUTH_DISABLE:-false}"
      APP_NAME: ${PROJECT_NAME}
      APP_SERVICE_NAME: core
      APP_SERVICE_KEY: ${CORE_SERVICE_KEY}
      DB_HOST: postgres
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      WAIT_HOSTS: rabbitmq:5672,postgres:5432
    volumes:
      - ../packages/php:/dependencies/php-package
  notification-service:
    build:
      context: server/notification-service
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - postgres
    environment:
      APP_DEBUG: "${APP_DEBUG:-true}"
      AUTH_DISABLE: "${AUTH_DISABLE:-false}"
      APP_NAME: ${PROJECT_NAME}
      APP_SERVICE_NAME: notification
      APP_SERVICE_KEY: ${NOTIFICATION_SERVICE_KEY}
      DB_HOST: postgres
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      MAIL_MAILER: ${MAIL_MAILER}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      WAIT_HOSTS: rabbitmq:5672,postgres:5432
    volumes:
      - ../packages/php:/dependencies/php-package