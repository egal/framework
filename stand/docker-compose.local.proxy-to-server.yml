version: '3.7'
services:
  proxy:
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    environment:
      CONF: |
        upstream api {
          server web-service:8080;
        }
          
        server {
          listen 80;
          server_name localhost;
        
          location / {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Range' always;
            # required to be able to read Authorization header in frontend
            add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        
            if ($$request_method = 'OPTIONS') { 
              add_header 'Access-Control-Allow-Origin' '*' always;
              add_header 'Access-Control-Allow-Credentials' 'true' always;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
              add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Range' always;
              # required to be able to read Authorization header in frontend
              add_header 'Access-Control-Expose-Headers' 'Authorization' always;      
        
              # Tell client that this pre-flight info is valid for 20 days
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
            }
            
    
            proxy_pass http://api;
          }
        }
    command: sh -c 'echo "$$CONF" > /etc/nginx/conf.d/default.conf && nginx -t && nginx -g "daemon off;"'
