name: Build release

on:
  create:
    tags:
      - 'v*'

jobs:

  release-package-php-framework:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Split
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw/origin\/}
          make --file=deploy.mk split_current_branch=${branch} deploy@packages/php/framework

  release-package-npm-framework:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Split
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw/origin\/}
          make --file=deploy.mk split_current_branch=${branch} deploy@packages/npm/framework

  release-package-npm-widget-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Split
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw/origin\/}
          make --file=deploy.mk split_current_branch=${branch} deploy@packages/npm/widget-library

  release-service-postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare tags for image
        id: image-metadata
        run: |
          REPOSITORY="${{ secrets.DOCKERHUB_USERNAME }}/postgres"
          TAGS="${REPOSITORY}:${GITHUB_REF##*/v}"
          echo "::set-output name=tag::$TAGS"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: services/postgres/base
          push: true
          tags: ${{ steps.image-metadata.outputs.tag }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: services/postgres/base
          push: true
          tags: ${{ steps.image-metadata.outputs.tag }}-pldbgapi

  release-service-rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare tags for image
        id: image-metadata
        run: echo "::set-output name=tag::${{ secrets.DOCKERHUB_USERNAME }}/rabbitmq:${GITHUB_REF##*/v}"
      - name: Build and push base
        uses: docker/build-push-action@v2
        with:
          context: ./services/rabbitmq/base
          push: true
          tags: ${{ steps.image-metadata.outputs.tag }}
      - name: Build and push management
        uses: docker/build-push-action@v2
        with:
          context: ./services/rabbitmq/management
          push: true
          tags: ${{ steps.image-metadata.outputs.tag }}-management

  release-service-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare tags for image
        id: image-metadata
        run: |
          REPOSITORY="${{ secrets.DOCKERHUB_USERNAME }}/web-service"
          TAGS="${REPOSITORY}:${GITHUB_REF##*/v}"
          echo "::set-output name=tags::$TAGS"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./services/web
          push: true
          tags: ${{ steps.image-metadata.outputs.tags }}
      - name: Build and push
        run: |
          echo "Pushed tags: ${{ steps.image-metadata.outputs.tags }}"

  release-service-auth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare tags for image
        id: image-metadata
        run: |
          REPOSITORY="${{ secrets.DOCKERHUB_USERNAME }}/auth-service"
          TAGS="${REPOSITORY}:${GITHUB_REF##*/v}"
          echo "::set-output name=tags::$TAGS"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./services/auth
          push: true
          tags: ${{ steps.image-metadata.outputs.tags }}
      - name: Build and push
        run: |
          echo "Pushed tags: ${{ steps.image-metadata.outputs.tags }}"
