include:
  - local: .gitlab-ci/deploy.gitlab-ci.yml

.envrironment-template: &environment-template
  name: testing/${CI_MERGE_REQUEST_ID}
  url: http://testing-${CI_MERGE_REQUEST_ID}.example.domain # TODO: Set your value!

.template:
  extends: .raw:template
  only:
    - merge_requests
  environment:
    <<: *environment-template
    on_stop: teardown-environment
  tags:
    - server-tag # TODO: Set your value!

.run-phpcs-script: &run-phpcs-script
  script: docker-compose run --rm --no-deps "${SERVICE_NAME}" php vendor/bin/phpcs

.run-phpunit-script: &run-phpunit-script
  script: docker-compose run --rm --no-deps "${SERVICE_NAME}" php vendor/bin/phpunit

upload-artifacts:deploy:
  extends: .template
  stage: deploy
  needs:
    - rabbitmq:deploy
    - postgres:deploy
  script:
    - docker-compose ps > ${CI_ENVIRONMENT_NAME}-docker.txt
    - rsync ./${CI_ENVIRONMENT_NAME}-docker.txt ${CI_PROJECT_DIR}
  artifacts:
    paths:
      - ${CI_ENVIRONMENT_NAME}-docker.txt

teardown-environment:
  extends: .template
  stage: stopping
  when: manual
  needs: []
  environment:
    <<: *environment-template
    action: stop
  script:
    - |
      source '.proxy.env'
      sudo rm -rf /etc/nginx/conf.d/${DOMAIN}.conf
      sudo nginx -s reload
    - |
      docker-compose stop --timeout 0
      docker-compose rm --force -v
      docker-compose down --volumes --remove-orphans --rmi local --timeout 0
    - cd / && rm -rf "${WORKDIR}"
